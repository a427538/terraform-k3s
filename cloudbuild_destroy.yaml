steps:
  - name: alpine
    args:
      - '-c'
      - |
        echo "***********************"
        echo "$BRANCH_NAME"
        echo "***********************"
    id: branch name
    entrypoint: sh

  - name: 'hashicorp/terraform:1.0.11'
    args:
      - '-c'
      - |
        echo "***********************************************************************"
        echo "Branch: $BRANCH_NAME Environment: ${_ENV}"
        echo "***********************************************************************"  
        if [ -d "environments/${_ENV}/" ]; then
          cd environments/${_ENV}
          export TF_VAR_branch="$BRANCH_NAME"
          export TF_VAR_ssh_keys="$$SSH_KEYS"          
          export TF_VAR_cloudflare_email="$$CLOUDFLARE_EMAIL"
          export TF_VAR_cloudflare_api_key="$$CLOUDFLARE_API_KEY"          
          terraform init
        else
          for dir in environments/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFORM INIT ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform init || exit 1
            cd ../../
          done
        fi
    id: tf init
    entrypoint: sh
    secretEnv: ['SSH_KEYS', 'CLOUDFLARE_EMAIL', 'CLOUDFLARE_API_KEY']

  - name: 'hashicorp/terraform:1.0.11'
    args:
      - '-c'
      - |
        echo "***********************************************************************"
        echo "Branch: $BRANCH_NAME Environment: ${_ENV}"
        echo "***********************************************************************"  
        if [ -d "environments/${_ENV}/" ]; then
          cd environments/${_ENV}
          export TF_VAR_branch="$BRANCH_NAME"
          export TF_VAR_ssh_keys="$$SSH_KEYS"
          export TF_VAR_cloudflare_email="$$CLOUDFLARE_EMAIL"
          export TF_VAR_cloudflare_api_key="$$CLOUDFLARE_API_KEY"          
          terraform destroy -auto-approve
        else
          for dir in environments/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}  
            echo ""
            echo "*************** TERRAFOM PLAN ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform destroy -auto-approve || exit 1
            cd ../../
          done
        fi 
    id: tf destroy
    entrypoint: sh
    secretEnv: ['SSH_KEYS', 'CLOUDFLARE_EMAIL', 'CLOUDFLARE_API_KEY']

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/cloudflare_email/versions/latest
    env: 'CLOUDFLARE_EMAIL'
  - versionName: projects/$PROJECT_ID/secrets/cloudflare_api_key/versions/latest
    env: 'CLOUDFLARE_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/ssh_keys/versions/latest
    env: 'SSH_KEYS'  
  # - versionName: projects/$PROJECT_ID/secrets/ansible_ssh_private_key/versions/latest
  #   env: 'ANSIBLE_SSH_PRIVATE_KEY'    
