steps:

- id: 'tf init'
  name: 'hashicorp/terraform:1.0.11'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      echo "***********************************************************************"
      echo "Branch: $BRANCH_NAME Environment: ${_ENV}"
      echo "***********************************************************************"  
      if [ -d "environments/${_ENV}/" ]; then
        cd environments/${_ENV}
        export TF_VAR_branch="$BRANCH_NAME"
        export TF_VAR_ssh_keys="$$SSH_KEYS"
        export TF_VAR_cloudflare_email="$$CLOUDFLARE_EMAIL"
        export TF_VAR_cloudflare_api_key="$$CLOUDFLARE_API_KEY"
        terraform init
      else
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi
  secretEnv: ['SSH_KEYS', 'CLOUDFLARE_EMAIL', 'CLOUDFLARE_API_KEY'] 

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.11'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "***********************************************************************"
      echo "Branch: $BRANCH_NAME Environment: ${_ENV}"
      echo "***********************************************************************"  
      if [ -d "environments/${_ENV}/" ]; then
        cd environments/${_ENV}
        export TF_VAR_branch="$BRANCH_NAME"
        export TF_VAR_ssh_keys="$$SSH_KEYS"
        export TF_VAR_cloudflare_email="$$CLOUDFLARE_EMAIL"
        export TF_VAR_cloudflare_api_key="$$CLOUDFLARE_API_KEY"        
        terraform plan
      else
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}  
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform plan || exit 1
          cd ../../
        done
      fi
  secretEnv: ['SSH_KEYS', 'CLOUDFLARE_EMAIL', 'CLOUDFLARE_API_KEY'] 
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.11'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "***********************************************************************"
      echo "Branch: $BRANCH_NAME Environment: ${_ENV}"
      echo "***********************************************************************"  
      if [ -d "environments/${_ENV}/" ]; then
        cd environments/${_ENV}
        export TF_VAR_branch="$BRANCH_NAME"
        export TF_VAR_ssh_keys="$$SSH_KEYS"
        export TF_VAR_cloudflare_email="$$CLOUDFLARE_EMAIL"
        export TF_VAR_cloudflare_api_key="$$CLOUDFLARE_API_KEY"        
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
        echo "*******************************************************************************"
      fi
  secretEnv: ['SSH_KEYS', 'CLOUDFLARE_EMAIL', 'CLOUDFLARE_API_KEY']       
# [END tf-apply]      
  
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/ssh_keys/versions/latest
    env: 'SSH_KEYS'  
  - versionName: projects/$PROJECT_ID/secrets/cloudflare_api_key/versions/latest
    env: 'CLOUDFLARE_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/cloudflare_email/versions/latest
    env: 'CLOUDFLARE_EMAIL'
